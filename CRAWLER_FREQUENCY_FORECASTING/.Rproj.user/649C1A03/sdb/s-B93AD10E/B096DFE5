{
    "contents" : "% Logs frequency whole site number of visits mobile bot forecasting\n% S.Duprey\n% July 15th, 2015\n\n### Loading and preprocessing the logs data ( whole site number of visits mobile bot )\n\n```{r data-preprocessing}\n# Frequency google bot mobile forecasting\n# reading the data extracted from the logs\nprint(\"Frequency google bot mobile forecasting\")\ngoogle_mobile_logs_file_path <- \"D:\\\\My_Data\\\\My_Crawler_Frequency\\\\crawl_2015_googlebot_mobile.csv\"\n\n# analysing the mobile\ngoogle_log_path <- google_mobile_logs_file_path\nsprintf(\"Reading the data extracted from the logs : %s\",google_log_path)\n\ngooglebotmobile_data_crawl  <- read.csv(google_log_path,TRUE,\";\")\n\n####head(googlebotmobile_data_crawl)\n####tail(googlebotmobile_data_crawl)\ngooglebotmobile_visits<-ts(googlebotmobile_data_crawl$Visits)\n####class(googlebotmobile_visits)\n####ts.plot(googlebotmobile_visits)\n```\n\n###  Backtesting the one next day frequency for the whole site aggregated URLs with constant, linear and ARIMA models\n```{r model-backtesting}\nbegining_times = 10 ;\narima_prediction = c(1:length(googlebotmobile_visits))\narima_prediction[1:begining_times]<- googlebotmobile_visits[1:begining_times]\n\nconstant_prediction = c(1:length(googlebotmobile_visits))\nconstant_prediction[1:begining_times]<- googlebotmobile_visits[1:begining_times]\n\nlinear_prediction = c(1:length(googlebotmobile_visits))\nlinear_prediction[1:begining_times]<- googlebotmobile_visits[1:begining_times]\n\nfor(i in begining_times:length(googlebotmobile_visits)) {\n  training_data<-googlebotmobile_visits[1:i]\n  feature = 1:i\n  # linear prediction\n  new_data <- data.frame(feature = 1:(NROW(training_data)+1))\n  my_linear_prediction<-predict(lm(training_data ~ feature), new_data, se.fit = TRUE)\n  ####plot(my_linear_prediction$fit,training_data )\n  ####par(new=T)\n  ####plot(training_data )\n  \n  # ARIMA prediction\n  model <- arima(training_data, order=c(1,1,1)) \n  next_day_prediction <- predict(model, n.ahead=1)\n  ####print(class(next_day_prediction))\n  ####print(length(next_day_prediction$pred))\n  ####print(class(next_day_prediction$pred[1]))\n  ####print(next_day_prediction$pred[1])\n  ####print(class(as.integer(next_day_prediction$pred[1])))\n  \n  # filling up the forecasting series\n  arima_prediction[i] <- as.integer(next_day_prediction$pred[1])\n  constant_prediction[i]=mean(training_data)\n  linear_prediction[i] <- tail(my_linear_prediction$fit, n=1)\n}\n```\n\n\n```{r model-performance-plot,dev='png'}\nmy_results_df <- data.frame(ARIMA_Prediction =arima_prediction, Constant_Prediction = constant_prediction, Linear_Prediction = linear_prediction, Entry = googlebotmobile_visits,  Days= 1:NROW(arima_prediction))\n\n# plotting the two time series together (only the points) for the arima modeling\nrequire(ggplot2)\ng <- ggplot(my_results_df, aes(x=Days, y=Entry))\ng + geom_smooth(method=\"lm\") + geom_point(aes(x=Days,y=Entry,color='real data')) + geom_point(aes(x=Days,y=ARIMA_Prediction,color='ARIMA forecast'))+ geom_point(aes(x=Days,y=Constant_Prediction,color='Constant forecast')) + geom_point(aes(x=Days,y=Linear_Prediction,color='Linear forecast'))\n```\n\n### computing the root mean squared error for each errors\n```{r rmse-model-performance}\nsprintf(\"Data extracted from the logs : %s\",google_log_path)\narima_rmse_constant = sqrt( mean( (my_results_df$ARIMA_Prediction - my_results_df$Entry)^2, na.rm = TRUE) )\nsprintf(\"ARIMA RMSE for ARIMA model %f\", arima_rmse_constant)\n\n\nconstant_rmse_constant = sqrt( mean( (my_results_df$Constant_Prediction - my_results_df$Entry)^2, na.rm = TRUE) )\nsprintf(\"Constant RMSE for constant model %f\", constant_rmse_constant)\n\n\nlinear_rmse_constant = sqrt( mean( (my_results_df$Linear_Prediction - my_results_df$Entry)^2, na.rm = TRUE) )\nsprintf(\"Linear RMSE for linear model %f\", linear_rmse_constant)\n\n```\n\n\n",
    "created" : 1436966713722.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1849184206",
    "id" : "B096DFE5",
    "lastKnownWriteTime" : 1436966933,
    "path" : "~/R/CRAWLER_FREQUENCY_FORECASTING/logs_forecasting_slides_whole_site_daily_visits_mobile.Rmd",
    "project_path" : "logs_forecasting_slides_whole_site_daily_visits_mobile.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}